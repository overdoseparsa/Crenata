# Generated by Django 5.1 on 2024-10-17 16:52

import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0009_remove_tag_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('is_active', models.BooleanField(verbose_name='is activate Category')),
                ('followers_katalog', models.ManyToManyField(related_name='followers_katalog_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='USER_Categorys', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Followers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_add', models.DateTimeField(auto_now_add=True)),
                ('followers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='USER_FOLLOWING', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_add', models.DateTimeField(auto_now_add=True)),
                ('Following', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_FOLLOWER', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('slug', models.SlugField(allow_unicode=True, max_length=250, unique_for_date='publish', verbose_name='slug')),
                ('body', models.TextField()),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2)),
                ('author', models.ForeignKey(help_text='this is the user include', on_delete=django.db.models.deletion.CASCADE, related_name='USER_POST', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='CATEGORY_POST', to='BLOG.category')),
            ],
            options={
                'verbose_name': 'Post',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TAGS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_tags', models.CharField(max_length=120, verbose_name='typeoff commant')),
                ('followings_len', models.BigIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ManyToManyField(related_name='POST_TAGS', to='BLOG.post')),
                ('tags_followers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TAGSMODELS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TAGS_CREATED', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='BLOG.TAGSMODELS', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Transmisson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BigIntegerField(verbose_name='like')),
                ('dislike', models.BigIntegerField(verbose_name='dslike')),
                ('share', models.BigIntegerField(verbose_name='share')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='POST_TRANS', to='BLOG.post', verbose_name='Post')),
            ],
            options={
                'ordering': ['post'],
            },
        ),
        migrations.CreateModel(
            name='USERTOKENUDDD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='User_TOKEN', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActionAPITOKEN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=480)),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TOKENS_ACTION', to='BLOG.usertokenuddd')),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title media')),
                ('is_ruls', models.BooleanField()),
                ('path', models.FileField(upload_to='')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='POST_MEDIA', to='BLOG.post', verbose_name='Post')),
            ],
            options={
                'ordering': ['post'],
                'indexes': [models.Index(fields=['post'], name='BLOG_media_post_id_c95b63_idx')],
            },
        ),
        migrations.CreateModel(
            name='Commants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TEXT', models.TextField(max_length=1000, verbose_name='text')),
                ('like', models.BigIntegerField(blank=True, null=True)),
                ('dilike', models.BigIntegerField(blank=True, null=True)),
                ('report', models.CharField(blank=True, max_length=155, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to='')),
                ('type_commant', models.CharField(choices=[('PR', 'private'), ('PB', 'public')], default='PR', max_length=2, verbose_name='type of commant')),
                ('commented_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(help_text='this is the user include', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User off comments')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='POST_COMMENTS', to='BLOG.post', verbose_name='Post')),
            ],
            options={
                'ordering': ['post'],
                'indexes': [models.Index(fields=['post'], name='BLOG_comman_post_id_05f3da_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-author'], name='BLOG_post_author__7281f3_idx'),
        ),
        migrations.AddIndex(
            model_name='transmisson',
            index=models.Index(fields=['post'], name='BLOG_transm_post_id_56e0c6_idx'),
        ),
    ]
